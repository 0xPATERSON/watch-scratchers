// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.10;

import "ds-test/test.sol";
import "../WatchScratchersRenderer.sol";

contract WatchScratchersRendererTest is DSTest {

    WatchScratchersRenderer testRenderer = new WatchScratchersRenderer();

    function setUp() public {
        bytes[] memory oldColors = new bytes[](2);
        oldColors[0] = bytes('#88E3DE');
        oldColors[1] = bytes('#041418');
        bytes[] memory newColors = new bytes[](2);
        newColors[0] = bytes('#465941');
        newColors[1] = bytes('#B4B8B2');
        testRenderer.setColorReplacement(WatchScratchersRenderer.WatchType.PP_GREEN, oldColors, newColors);
    }

    // color replace helper test
    function testColorReplaceHappyTrailing() public {
        string memory actualOutput = testRenderer._colorReplace("123#88E3DE", WatchScratchersRenderer.WatchType.PP_GREEN);
        string memory expectedOutput = "123#465941";
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testColorReplaceHappyStarting() public {
        string memory actualOutput = testRenderer._colorReplace("#88E3DE123", WatchScratchersRenderer.WatchType.PP_GREEN);
        string memory expectedOutput = "#465941123";
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testColorReplaceHappyOnly() public {
        string memory actualOutput = testRenderer._colorReplace("#88E3DE#041418#041418", WatchScratchersRenderer.WatchType.PP_GREEN);
        string memory expectedOutput = "#465941#B4B8B2#B4B8B2";
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testColorReplaceNone() public {
        string memory actualOutput = testRenderer._colorReplace("#88E3DA#04AA18#041AA8", WatchScratchersRenderer.WatchType.PP_GREEN);
        string memory expectedOutput = "#88E3DA#04AA18#041AA8";
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testColorReplaceHappyNoneShort() public {
        string memory actualOutput = testRenderer._colorReplace("#88", WatchScratchersRenderer.WatchType.PP_GREEN);
        string memory expectedOutput = "#88";
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testColorReplaceHappyNoneEmptyString() public {
        string memory actualOutput = testRenderer._colorReplace("", WatchScratchersRenderer.WatchType.PP_GREEN);
        string memory expectedOutput = "";
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testColorReplaceHappyRealistic() public {
        // try on PP_GREEN
        string memory actualOutput = testRenderer._colorReplace('<mask id="c" fill="white"><path d="m224.65 13.678 304.99 26.683 45.017 204.9-0.505 5.779-427.37-37.39 0.656-7.497 77.21-192.48z" clip-rule="evenodd" fill-rule="evenodd"/></mask><path d="m224.65 13.678 304.99 26.683 45.017 204.9-0.505 5.779-427.37-37.39 0.656-7.497 77.21-192.48z" clip-rule="evenodd" fill="#D1D2D6" fill-rule="evenodd"/><path d="m224.65 13.678-25.987-10.424 7.733-19.28 20.694 1.8105-2.44 27.894zm304.99 26.683 2.441-27.894 20.493 1.7929 4.414 20.092-27.348 6.0084zm45.017 204.9 27.348-6.009 0.919 4.183-0.373 4.266-27.894-2.44zm-0.505 5.779 27.893 2.44-2.44 27.894-27.894-2.441 2.441-27.893zm-427.37-37.39-2.44 27.893-27.893-2.44 2.44-27.893 27.893 2.44zm0.656-7.497-27.893-2.44 0.361-4.134 1.545-3.85 25.987 10.424zm79.65-220.37 304.99 26.683-4.881 55.787-304.99-26.683 4.881-55.787zm329.9 48.568 45.017 204.9-54.695 12.017-45.018-204.9 54.696-12.017zm45.563 213.35-0.506 5.779-55.787-4.881 0.506-5.779 55.787 4.881zm-30.84 31.232-427.37-37.39 4.881-55.786 427.37 37.389-4.881 55.787zm-452.82-67.723 0.656-7.497 55.787 4.88-0.656 7.497-55.787-4.88zm2.562-15.481 77.21-192.48 51.974 20.849-77.21 192.48-51.974-20.848z" fill="#000" mask="url(#c)"/><rect transform="rotate(185 460.68 136.72)" x="460.68" y="136.72" width="187" height="51" rx="16" stroke="#000" stroke-width="28"/><line x1="534.59" x2="469.84" y1="118.09" y2="112.42" stroke="#000" stroke-width="28"/><line x1="271.6" x2="206.84" y1="95.08" y2="89.414" stroke="#000" stroke-width="28"/><mask id="a" fill="white"><path d="m156.83 811.8 304.99 26.683 79.914-193.97 0.506-5.779-427.37-37.39-0.656 7.497 42.613 202.96z" clip-rule="evenodd" fill-rule="evenodd"/></mask><path d="m156.83 811.8 304.99 26.683 79.914-193.97 0.506-5.779-427.37-37.39-0.656 7.497 42.613 202.96z" clip-rule="evenodd" fill="#D1D2D6" fill-rule="evenodd"/><path d="m156.83 811.8-27.402 5.753 4.268 20.33 20.694 1.81 2.44-27.893zm304.99 26.683-2.44 27.893 20.493 1.793 7.836-19.02-25.889-10.666zm79.914-193.97 25.889 10.666 1.631-3.96 0.374-4.266-27.894-2.44zm0.506-5.779 27.893 2.44 2.44-27.893-27.893-2.441-2.44 27.894zm-427.37-37.39 2.441-27.893-27.894-2.441-2.4404 27.894 27.893 2.44zm-0.656 7.497-27.893-2.44-0.3616 4.133 0.8525 4.061 27.402-5.754zm40.173 230.85 304.99 26.683 4.88-55.786-304.99-26.684-4.881 55.787zm333.32 9.456 79.914-193.97-51.778-21.332-79.914 193.97 51.778 21.332zm81.919-202.2 0.505-5.779-55.787-4.88-0.505 5.779 55.787 4.88zm-24.948-36.113-427.37-37.389-4.881 55.787 427.37 37.389 4.881-55.787zm-457.7-11.936-0.6559 7.497 55.787 4.881 0.656-7.498-55.787-4.88zm-0.165 15.691 42.613 202.96 54.805-11.507-42.613-202.96-54.805 11.507z" fill="#000" mask="url(#a)"/><rect transform="matrix(-.9962 -.087156 -.087156 .9962 396.65 717.62)" x="-15.167" y="12.726" width="187" height="51" rx="16" stroke="#000" stroke-width="28"/><line transform="matrix(-.9962 -.087156 -.087156 .9962 478.97 776.75)" x2="65" y1="-14" y2="-14" stroke="#000" stroke-width="28"/><line transform="matrix(-.9962 -.087156 -.087156 .9962 215.98 753.74)" x2="65" y1="-14" y2="-14" stroke="#000" stroke-width="28"/><mask id="b" fill="white"><path d="m658.92 345.12-15.054 172.06-60.225 44.54-6.314-0.552 22.419-256.24 9.88 0.865-1.473 0.758 50.767 38.572z" clip-rule="evenodd" fill-rule="evenodd"/></mask><path d="m658.92 345.12-15.054 172.06-60.225 44.54-6.314-0.552 22.419-256.24 9.88 0.865-1.473 0.758 50.767 38.572z" clip-rule="evenodd" fill="#D1D2D6" fill-rule="evenodd"/><path d="m643.87 517.18 7.135 9.648 4.348-3.215 0.471-5.387-11.954-1.046zm15.054-172.06 11.954 1.046 0.577-6.596-5.272-4.005-7.259 9.555zm-75.279 216.6-1.046 11.954 4.527 0.396 3.654-2.702-7.135-9.648zm-6.314-0.552-11.954-1.046-1.046 11.954 11.955 1.046 1.045-11.954zm22.419-256.24 1.046-11.954-11.954-1.046-1.046 11.954 11.954 1.046zm9.88 0.865 5.491 10.67 36.936-19.004-41.381-3.621-1.046 11.955zm-1.473 0.758-5.491-10.671-16.926 8.71 15.157 11.516 7.26-9.555zm47.667 211.68 15.054-172.06-23.909-2.092-15.053 172.06 23.908 2.092zm-65.044 53.142 60.225-44.54-14.27-19.296-60.226 44.54 14.271 19.296zm-14.494 1.754 6.313 0.552 2.092-23.908-6.314-0.553-2.091 23.909zm11.51-269.24-22.419 256.24 23.909 2.091 22.418-256.24-23.908-2.092zm22.88-10.044-9.88-0.864-2.092 23.908 9.881 0.865 2.091-23.909zm2.971 23.383 1.474-0.758-10.981-21.341-1.474 0.758 10.981 21.341zm52.536 18.347-50.767-38.572-14.519 19.11 50.767 38.572 14.519-19.11z" fill="#000" mask="url(#b)"/><line x1="573.19" x2="645.94" y1="571.42" y2="508.58" stroke="#000" stroke-width="28"/><line x1="641.15" x2="656.32" y1="517.95" y2="344.48" stroke="#000" stroke-width="28"/><line x1="661.25" x2="585.52" y1="356.41" y2="292.65" stroke="#000" stroke-width="28"/><rect transform="rotate(185 75.897 507.59)" x="75.897" y="507.59" width="50" height="220" fill="#D1D2D6"/><rect transform="rotate(185 578.16 710.14)" x="578.16" y="710.14" width="521" height="526" rx="220" fill="#D1D2D6" stroke="#000" stroke-width="28"/><rect transform="rotate(185 516.13 627.42)" x="516.13" y="627.42" width="380" height="372" rx="165" fill="#88E3DE" stroke="#000" stroke-width="28"/><rect transform="rotate(185 216.09 425.34)" x="216.09" y="425.34" width="32.816" height="28.205" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="rotate(215.3 251.58 568.72)" x="251.58" y="568.72" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="matrix(-.90408 .42736 .42736 .90408 275.31 266.39)" x="-1.1918" y="3.3286" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="rotate(185 360.99 318.22)" x="360.99" y="318.22" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="rotate(185 324.59 585.06)" x="324.59" y="585.06" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="rotate(185 345.51 586.89)" x="345.51" y="586.89" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="matrix(.90408 -.42736 -.42736 -.90408 403.91 579.76)" x="1.1918" y="-3.3286" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="rotate(35.3 432.64 282.44)" x="432.64" y="282.44" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="matrix(.58849 -.8085 -.8085 -.58849 474.27 527.69)" x="-.55003" y="-3.4925" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="rotate(63.95 492.94 345.36)" x="492.94" y="345.36" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="matrix(-.58849 .8085 .8085 .58849 205.23 317.91)" x=".55003" y="3.4925" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="matrix(.087156 -.9962 -.9962 -.087156 499.62 446.52)" x="-2.2726" y="-2.7084" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><rect transform="rotate(243.95 191.56 505.23)" x="191.56" y="505.23" width="16" height="52" fill="#FEFEFD" stroke="#041418" stroke-width="5"/><line x1="94.898" x2="34.329" y1="550.68" y2="497.19" stroke="#000" stroke-width="28"/><line x1="39.032" x2="32.705" y1="506.74" y2="429.89" stroke="#000" stroke-width="28"/><line x1="41.146" x2="52.876" y1="354.72" y2="289.49" stroke="#000" stroke-width="28"/><line x1="45.892" x2="122.06" y1="298.76" y2="254.23" stroke="#000" stroke-width="28"/><line x1="33.689" x2="85.84" y1="443.64" y2="409.76" stroke="#000" stroke-width="28"/><line transform="matrix(.73124 .68212 .68212 -.73124 51.626 337.53)" x2="62.19" y1="-14" y2="-14" stroke="#000" stroke-width="28"/><line x1="16.15" x2="27.742" y1="456.19" y2="323.7" stroke="#000" stroke-width="28"/>', WatchScratchersRenderer.WatchType.PP_GREEN);
        // emit log(actualOutput);
        string memory expectedOutput = '<mask id="c" fill="white"><path d="m224.65 13.678 304.99 26.683 45.017 204.9-0.505 5.779-427.37-37.39 0.656-7.497 77.21-192.48z" clip-rule="evenodd" fill-rule="evenodd"/></mask><path d="m224.65 13.678 304.99 26.683 45.017 204.9-0.505 5.779-427.37-37.39 0.656-7.497 77.21-192.48z" clip-rule="evenodd" fill="#D1D2D6" fill-rule="evenodd"/><path d="m224.65 13.678-25.987-10.424 7.733-19.28 20.694 1.8105-2.44 27.894zm304.99 26.683 2.441-27.894 20.493 1.7929 4.414 20.092-27.348 6.0084zm45.017 204.9 27.348-6.009 0.919 4.183-0.373 4.266-27.894-2.44zm-0.505 5.779 27.893 2.44-2.44 27.894-27.894-2.441 2.441-27.893zm-427.37-37.39-2.44 27.893-27.893-2.44 2.44-27.893 27.893 2.44zm0.656-7.497-27.893-2.44 0.361-4.134 1.545-3.85 25.987 10.424zm79.65-220.37 304.99 26.683-4.881 55.787-304.99-26.683 4.881-55.787zm329.9 48.568 45.017 204.9-54.695 12.017-45.018-204.9 54.696-12.017zm45.563 213.35-0.506 5.779-55.787-4.881 0.506-5.779 55.787 4.881zm-30.84 31.232-427.37-37.39 4.881-55.786 427.37 37.389-4.881 55.787zm-452.82-67.723 0.656-7.497 55.787 4.88-0.656 7.497-55.787-4.88zm2.562-15.481 77.21-192.48 51.974 20.849-77.21 192.48-51.974-20.848z" fill="#000" mask="url(#c)"/><rect transform="rotate(185 460.68 136.72)" x="460.68" y="136.72" width="187" height="51" rx="16" stroke="#000" stroke-width="28"/><line x1="534.59" x2="469.84" y1="118.09" y2="112.42" stroke="#000" stroke-width="28"/><line x1="271.6" x2="206.84" y1="95.08" y2="89.414" stroke="#000" stroke-width="28"/><mask id="a" fill="white"><path d="m156.83 811.8 304.99 26.683 79.914-193.97 0.506-5.779-427.37-37.39-0.656 7.497 42.613 202.96z" clip-rule="evenodd" fill-rule="evenodd"/></mask><path d="m156.83 811.8 304.99 26.683 79.914-193.97 0.506-5.779-427.37-37.39-0.656 7.497 42.613 202.96z" clip-rule="evenodd" fill="#D1D2D6" fill-rule="evenodd"/><path d="m156.83 811.8-27.402 5.753 4.268 20.33 20.694 1.81 2.44-27.893zm304.99 26.683-2.44 27.893 20.493 1.793 7.836-19.02-25.889-10.666zm79.914-193.97 25.889 10.666 1.631-3.96 0.374-4.266-27.894-2.44zm0.506-5.779 27.893 2.44 2.44-27.893-27.893-2.441-2.44 27.894zm-427.37-37.39 2.441-27.893-27.894-2.441-2.4404 27.894 27.893 2.44zm-0.656 7.497-27.893-2.44-0.3616 4.133 0.8525 4.061 27.402-5.754zm40.173 230.85 304.99 26.683 4.88-55.786-304.99-26.684-4.881 55.787zm333.32 9.456 79.914-193.97-51.778-21.332-79.914 193.97 51.778 21.332zm81.919-202.2 0.505-5.779-55.787-4.88-0.505 5.779 55.787 4.88zm-24.948-36.113-427.37-37.389-4.881 55.787 427.37 37.389 4.881-55.787zm-457.7-11.936-0.6559 7.497 55.787 4.881 0.656-7.498-55.787-4.88zm-0.165 15.691 42.613 202.96 54.805-11.507-42.613-202.96-54.805 11.507z" fill="#000" mask="url(#a)"/><rect transform="matrix(-.9962 -.087156 -.087156 .9962 396.65 717.62)" x="-15.167" y="12.726" width="187" height="51" rx="16" stroke="#000" stroke-width="28"/><line transform="matrix(-.9962 -.087156 -.087156 .9962 478.97 776.75)" x2="65" y1="-14" y2="-14" stroke="#000" stroke-width="28"/><line transform="matrix(-.9962 -.087156 -.087156 .9962 215.98 753.74)" x2="65" y1="-14" y2="-14" stroke="#000" stroke-width="28"/><mask id="b" fill="white"><path d="m658.92 345.12-15.054 172.06-60.225 44.54-6.314-0.552 22.419-256.24 9.88 0.865-1.473 0.758 50.767 38.572z" clip-rule="evenodd" fill-rule="evenodd"/></mask><path d="m658.92 345.12-15.054 172.06-60.225 44.54-6.314-0.552 22.419-256.24 9.88 0.865-1.473 0.758 50.767 38.572z" clip-rule="evenodd" fill="#D1D2D6" fill-rule="evenodd"/><path d="m643.87 517.18 7.135 9.648 4.348-3.215 0.471-5.387-11.954-1.046zm15.054-172.06 11.954 1.046 0.577-6.596-5.272-4.005-7.259 9.555zm-75.279 216.6-1.046 11.954 4.527 0.396 3.654-2.702-7.135-9.648zm-6.314-0.552-11.954-1.046-1.046 11.954 11.955 1.046 1.045-11.954zm22.419-256.24 1.046-11.954-11.954-1.046-1.046 11.954 11.954 1.046zm9.88 0.865 5.491 10.67 36.936-19.004-41.381-3.621-1.046 11.955zm-1.473 0.758-5.491-10.671-16.926 8.71 15.157 11.516 7.26-9.555zm47.667 211.68 15.054-172.06-23.909-2.092-15.053 172.06 23.908 2.092zm-65.044 53.142 60.225-44.54-14.27-19.296-60.226 44.54 14.271 19.296zm-14.494 1.754 6.313 0.552 2.092-23.908-6.314-0.553-2.091 23.909zm11.51-269.24-22.419 256.24 23.909 2.091 22.418-256.24-23.908-2.092zm22.88-10.044-9.88-0.864-2.092 23.908 9.881 0.865 2.091-23.909zm2.971 23.383 1.474-0.758-10.981-21.341-1.474 0.758 10.981 21.341zm52.536 18.347-50.767-38.572-14.519 19.11 50.767 38.572 14.519-19.11z" fill="#000" mask="url(#b)"/><line x1="573.19" x2="645.94" y1="571.42" y2="508.58" stroke="#000" stroke-width="28"/><line x1="641.15" x2="656.32" y1="517.95" y2="344.48" stroke="#000" stroke-width="28"/><line x1="661.25" x2="585.52" y1="356.41" y2="292.65" stroke="#000" stroke-width="28"/><rect transform="rotate(185 75.897 507.59)" x="75.897" y="507.59" width="50" height="220" fill="#D1D2D6"/><rect transform="rotate(185 578.16 710.14)" x="578.16" y="710.14" width="521" height="526" rx="220" fill="#D1D2D6" stroke="#000" stroke-width="28"/><rect transform="rotate(185 516.13 627.42)" x="516.13" y="627.42" width="380" height="372" rx="165" fill="#465941" stroke="#000" stroke-width="28"/><rect transform="rotate(185 216.09 425.34)" x="216.09" y="425.34" width="32.816" height="28.205" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="rotate(215.3 251.58 568.72)" x="251.58" y="568.72" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="matrix(-.90408 .42736 .42736 .90408 275.31 266.39)" x="-1.1918" y="3.3286" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="rotate(185 360.99 318.22)" x="360.99" y="318.22" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="rotate(185 324.59 585.06)" x="324.59" y="585.06" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="rotate(185 345.51 586.89)" x="345.51" y="586.89" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="matrix(.90408 -.42736 -.42736 -.90408 403.91 579.76)" x="1.1918" y="-3.3286" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="rotate(35.3 432.64 282.44)" x="432.64" y="282.44" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="matrix(.58849 -.8085 -.8085 -.58849 474.27 527.69)" x="-.55003" y="-3.4925" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="rotate(63.95 492.94 345.36)" x="492.94" y="345.36" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="matrix(-.58849 .8085 .8085 .58849 205.23 317.91)" x=".55003" y="3.4925" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="matrix(.087156 -.9962 -.9962 -.087156 499.62 446.52)" x="-2.2726" y="-2.7084" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><rect transform="rotate(243.95 191.56 505.23)" x="191.56" y="505.23" width="16" height="52" fill="#FEFEFD" stroke="#B4B8B2" stroke-width="5"/><line x1="94.898" x2="34.329" y1="550.68" y2="497.19" stroke="#000" stroke-width="28"/><line x1="39.032" x2="32.705" y1="506.74" y2="429.89" stroke="#000" stroke-width="28"/><line x1="41.146" x2="52.876" y1="354.72" y2="289.49" stroke="#000" stroke-width="28"/><line x1="45.892" x2="122.06" y1="298.76" y2="254.23" stroke="#000" stroke-width="28"/><line x1="33.689" x2="85.84" y1="443.64" y2="409.76" stroke="#000" stroke-width="28"/><line transform="matrix(.73124 .68212 .68212 -.73124 51.626 337.53)" x2="62.19" y1="-14" y2="-14" stroke="#000" stroke-width="28"/><line x1="16.15" x2="27.742" y1="456.19" y2="323.7" stroke="#000" stroke-width="28"/>';
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }
    
    // render hands test
    function testRDressHands() public {
        string memory actualOutput = testRenderer._renderHands("0 0 2500 2500", "158.1", "309.7", "#B2B2B2", "#B2B2B2", "#E8E8E8", 150, 342, 57, WatchScratchersRenderer.HandType.DRESS_ROLEX);
        // emit log(actualOutput);
        string memory expectedOutput = '<svg class="dial" viewBox="0 0 2500 2500" x="158.1" y="309.7"> <style>g, line, circle { --color-accent: #B2B2B2; --color-hand-outer: #B2B2B2; --color-hand-inner: #E8E8E8; -webkit-transform-origin: inherit; transform-origin: inherit; display: flex; align-items: center; justify-content: center; margin: 0; } .circle { color: var(--color-hand-outer); } .dial { width: 60vmin; height: 60vmin; fill: currentColor; -webkit-transform-origin: 50px 50px; transform-origin: 50px 50px; -webkit-animation-name: fade-in; animation-name: fade-in; -webkit-animation-duration: 500ms; animation-duration: 500ms; -webkit-animation-fill-mode: both; animation-fill-mode: both; } .dial line { stroke: currentColor; } .hand { transition: -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); } .hour-hand { animation: rotateHourHand 216000s linear infinite; } .hand-outer { stroke-width: 4px; color: var(--color-hand-outer); } .hand-inner { stroke-width: 2px; color: var(--color-hand-inner); } .minute-hand { animation: rotateMinuteHand 3600s linear infinite; } .second-hand { color: var(--color-accent); stroke-width: 2px; animation: rotateSecondHand 60s linear infinite; } @keyframes rotateSecondHand { from { -webkit-transform: rotate(150deg); -moz-transform: rotate(150deg); -ms-transform: rotate(150deg); -o-transform: rotate(150deg); transform: rotate(150deg); } to { -webkit-transform: rotate(510deg); -moz-transform: rotate(510deg); -ms-transform: rotate(510deg); -o-transform: rotate(510deg); transform: rotate(510deg); } } @keyframes rotateMinuteHand { from { -webkit-transform: rotate(342deg); -moz-transform: rotate(342deg); -ms-transform: rotate(342deg); -o-transform: rotate(342deg); transform: rotate(342deg); } to { -webkit-transform: rotate(702deg); -moz-transform: rotate(702deg); -ms-transform: rotate(702deg); -o-transform: rotate(702deg); transform: rotate(702deg); } } @keyframes rotateHourHand { from { -webkit-transform: rotate(57deg); -moz-transform: rotate(57deg); -ms-transform: rotate(57deg); -o-transform: rotate(57deg); transform: rotate(57deg); } to { -webkit-transform: rotate(417deg); -moz-transform: rotate(417deg); -ms-transform: rotate(417deg); -o-transform: rotate(417deg); transform: rotate(417deg); } } </style> <g> <g class="hand hour-hand"> <line class="hand-outer" x1="50" y1="25" x2="50" y2="60"></line> <line class="hand-inner" x1="50" y1="28" x2="50" y2="40"></line> </g> <g class="hand minute-hand"> <line class="hand-outer" x1="50" y1="15" x2="50" y2="60"></line> <line class="hand-inner" x1="50" y1="18" x2="50" y2="40"></line> </g> <circle class="circle" cx="50" cy="50" r="3"></circle> <g class="hand second-hand"> <line x1="50" y1="10" x2="50" y2="65"></line> <circle cx="50" cy="50" r="3"></circle> </g> </g> </svg> ';
        bytes memory actualBytes = bytes(actualOutput);
        bytes memory expectedBytes = bytes(expectedOutput);
        assertEq(actualBytes.length, expectedBytes.length);
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testRoundHands() public {
        string memory actualOutput = testRenderer._renderHands("0 0 2500 2500", "158.1", "309.7", "#B2B2B2", "#B2B2B2", "#E8E8E8", 150, 342, 57, WatchScratchersRenderer.HandType.ROUND);
        // emit log(actualOutput);
        string memory expectedOutput = '<svg class="dial" viewBox="0 0 2500 2500" x="158.1" y="309.7"> <style>g, line, circle { --color-accent: #B2B2B2; --color-hand-outer: #B2B2B2; --color-hand-inner: #E8E8E8; -webkit-transform-origin: inherit; transform-origin: inherit; display: flex; align-items: center; justify-content: center; margin: 0; } .circle { color: var(--color-accent); } .dial { width: 60vmin; height: 60vmin; fill: currentColor; -webkit-transform-origin: 50px 50px; transform-origin: 50px 50px; -webkit-animation-name: fade-in; animation-name: fade-in; -webkit-animation-duration: 500ms; animation-duration: 500ms; -webkit-animation-fill-mode: both; animation-fill-mode: both; } .dial line { stroke: currentColor; stroke-linecap: round; } .hand { transition: -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); } .hour-hand { animation: rotateHourHand 216000s linear infinite; } .hand-outer { stroke-width: 4px; color: var(--color-hand-outer); } .hand-inner { stroke-width: 2px; color: var(--color-hand-inner); } .minute-hand { animation: rotateMinuteHand 3600s linear infinite; } .second-hand { color: var(--color-accent); stroke-width: 2px; animation: rotateSecondHand 60s linear infinite; } @keyframes rotateSecondHand { from { -webkit-transform: rotate(150deg); -moz-transform: rotate(150deg); -ms-transform: rotate(150deg); -o-transform: rotate(150deg); transform: rotate(150deg); } to { -webkit-transform: rotate(510deg); -moz-transform: rotate(510deg); -ms-transform: rotate(510deg); -o-transform: rotate(510deg); transform: rotate(510deg); } } @keyframes rotateMinuteHand { from { -webkit-transform: rotate(342deg); -moz-transform: rotate(342deg); -ms-transform: rotate(342deg); -o-transform: rotate(342deg); transform: rotate(342deg); } to { -webkit-transform: rotate(702deg); -moz-transform: rotate(702deg); -ms-transform: rotate(702deg); -o-transform: rotate(702deg); transform: rotate(702deg); } } @keyframes rotateHourHand { from { -webkit-transform: rotate(57deg); -moz-transform: rotate(57deg); -ms-transform: rotate(57deg); -o-transform: rotate(57deg); transform: rotate(57deg); } to { -webkit-transform: rotate(417deg); -moz-transform: rotate(417deg); -ms-transform: rotate(417deg); -o-transform: rotate(417deg); transform: rotate(417deg); } } </style> <g> <g class="hand hour-hand"> <line class="hand-outer" x1="50" x2="50" y1="25" y2="50"/> <line class="hand-inner" x1="50" x2="50" y1="25" y2="50"/> </g> <g class="hand minute-hand"> <line class="hand hand-outer" x1="50" x2="50" y1="15" y2="50"/> <line class="hand-inner" x1="50" x2="50" y1="15" y2="50"/> </g> <circle class="circle" cx="50" cy="50" r="3"/> <g class="hand second-hand"> <line x1="50" x2="50" y1="10" y2="65"/> <circle cx="50" cy="50" r="1.5"/> </g> </g> </svg> ';
        bytes memory actualBytes = bytes(actualOutput);
        bytes memory expectedBytes = bytes(expectedOutput);
        assertEq(actualBytes.length, expectedBytes.length);
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testSportHands() public {
        string memory actualOutput = testRenderer._renderHands("0 0 2500 2500", "158.1", "309.7", "#B2B2B2", "#B2B2B2", "#E8E8E8", 150, 342, 57, WatchScratchersRenderer.HandType.SPORT);
        // emit log(actualOutput);
        string memory expectedOutput = '<svg class="dial" viewBox="0 0 2500 2500" x="158.1" y="309.7"> <style>g, line, circle { --color-accent: #B2B2B2; --color-hand-outer: #B2B2B2; --color-hand-inner: #E8E8E8; -webkit-transform-origin: inherit; transform-origin: inherit; display: flex; align-items: center; justify-content: center; margin: 0; } .circle { color: var(--color-accent); } .dial { width: 60vmin; height: 60vmin; fill: currentColor; -webkit-transform-origin: 50px 50px; transform-origin: 50px 50px; -webkit-animation-name: fade-in; animation-name: fade-in; -webkit-animation-duration: 500ms; animation-duration: 500ms; -webkit-animation-fill-mode: both; animation-fill-mode: both; } .dial line { stroke: currentColor; } .hand { transition: -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); } .hour-hand { animation: rotateHourHand 216000s linear infinite; } .hand-outer { stroke-width: 4px; color: var(--color-hand-outer); } .hand-inner { stroke-width: 2px; color: var(--color-hand-inner); } .minute-hand { animation: rotateMinuteHand 3600s linear infinite; } .second-hand { color: var(--color-accent); stroke-width: 2px; animation: rotateSecondHand 60s linear infinite; } @keyframes rotateSecondHand { from { -webkit-transform: rotate(150deg); -moz-transform: rotate(150deg); -ms-transform: rotate(150deg); -o-transform: rotate(150deg); transform: rotate(150deg); } to { -webkit-transform: rotate(510deg); -moz-transform: rotate(510deg); -ms-transform: rotate(510deg); -o-transform: rotate(510deg); transform: rotate(510deg); } } @keyframes rotateMinuteHand { from { -webkit-transform: rotate(342deg); -moz-transform: rotate(342deg); -ms-transform: rotate(342deg); -o-transform: rotate(342deg); transform: rotate(342deg); } to { -webkit-transform: rotate(702deg); -moz-transform: rotate(702deg); -ms-transform: rotate(702deg); -o-transform: rotate(702deg); transform: rotate(702deg); } } @keyframes rotateHourHand { from { -webkit-transform: rotate(57deg); -moz-transform: rotate(57deg); -ms-transform: rotate(57deg); -o-transform: rotate(57deg); transform: rotate(57deg); } to { -webkit-transform: rotate(417deg); -moz-transform: rotate(417deg); -ms-transform: rotate(417deg); -o-transform: rotate(417deg); transform: rotate(417deg); } } </style> <g> <g class="hand hour-hand"> <line class="hand-outer" x1="50" x2="50" y1="25" y2="50"/> <circle class="hand-outer" cx="50" cy="33" r="5"/> <line class="hand-inner" x1="50" x2="50" y1="27" y2="50"/> <circle class="hand-inner" cx="50" cy="33" r="3.5"/> </g> <g class="hand minute-hand"> <line class="hand-outer" x1="50" x2="50" y1="15" y2="50"/> <line class="hand-inner" x1="50" x2="50" y1="17" y2="50"/> </g> <circle class="circle" cx="50" cy="50" r="3"/> <g class="hand second-hand"> <line x1="50" x2="50" y1="10" y2="65"/> <circle cx="50" cy="65" r="2"/> <circle cx="50" cy="20" r="3"/> <circle class="hand-inner" cx="50" cy="20" r="1.5"/> </g> </g> </svg> ';
        bytes memory actualBytes = bytes(actualOutput);
        bytes memory expectedBytes = bytes(expectedOutput);
        assertEq(actualBytes.length, expectedBytes.length);
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testODressHands() public {
        string memory actualOutput = testRenderer._renderHands("0 0 2500 2500", "158.1", "309.7", "#B2B2B2", "#B2B2B2", "#E8E8E8", 150, 342, 57, WatchScratchersRenderer.HandType.DRESS);
        // emit log(actualOutput);
        string memory expectedOutput = '<svg class="dial" viewBox="0 0 2500 2500" x="158.1" y="309.7"> <style>g, line, circle { --color-accent: #B2B2B2; --color-hand-outer: #B2B2B2; --color-hand-inner: #E8E8E8; -webkit-transform-origin: inherit; transform-origin: inherit; display: flex; align-items: center; justify-content: center; margin: 0; } .circle { color: var(--color-hand-outer); } .dial { width: 60vmin; height: 60vmin; fill: currentColor; -webkit-transform-origin: 50px 50px; transform-origin: 50px 50px; -webkit-animation-name: fade-in; animation-name: fade-in; -webkit-animation-duration: 500ms; animation-duration: 500ms; -webkit-animation-fill-mode: both; animation-fill-mode: both; } .dial line { stroke: currentColor; } .hand { transition: -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); } .hour-hand { animation: rotateHourHand 216000s linear infinite; } .hand-outer { stroke-width: 4px; color: var(--color-hand-outer); } .hand-inner { stroke-width: 2px; color: var(--color-hand-inner); } .minute-hand { animation: rotateMinuteHand 3600s linear infinite; } .second-hand { color: var(--color-accent); stroke-width: 2px; animation: rotateSecondHand 60s linear infinite; } @keyframes rotateSecondHand { from { -webkit-transform: rotate(150deg); -moz-transform: rotate(150deg); -ms-transform: rotate(150deg); -o-transform: rotate(150deg); transform: rotate(150deg); } to { -webkit-transform: rotate(510deg); -moz-transform: rotate(510deg); -ms-transform: rotate(510deg); -o-transform: rotate(510deg); transform: rotate(510deg); } } @keyframes rotateMinuteHand { from { -webkit-transform: rotate(342deg); -moz-transform: rotate(342deg); -ms-transform: rotate(342deg); -o-transform: rotate(342deg); transform: rotate(342deg); } to { -webkit-transform: rotate(702deg); -moz-transform: rotate(702deg); -ms-transform: rotate(702deg); -o-transform: rotate(702deg); transform: rotate(702deg); } } @keyframes rotateHourHand { from { -webkit-transform: rotate(57deg); -moz-transform: rotate(57deg); -ms-transform: rotate(57deg); -o-transform: rotate(57deg); transform: rotate(57deg); } to { -webkit-transform: rotate(417deg); -moz-transform: rotate(417deg); -ms-transform: rotate(417deg); -o-transform: rotate(417deg); transform: rotate(417deg); } } </style> <g> <g class="hand hour-hand"> <line class="hand-outer" x1="50" x2="50" y1="25" y2="50"/> <line class="hand-inner" x1="50" x2="50" y1="27" y2="48"/> </g> <g class="hand minute-hand"> <line class="hand-outer" x1="50" x2="50" y1="15" y2="50"/> <line class="hand-inner" x1="50" x2="50" y1="17" y2="48"/> </g> <circle class="circle" cx="50" cy="50" r="3"/> <g class="hand second-hand"> <line x1="50" x2="50" y1="10" y2="65"/> <circle cx="50" cy="50" r="3"/> </g> </g> </svg> ';
        bytes memory actualBytes = bytes(actualOutput);
        bytes memory expectedBytes = bytes(expectedOutput);
        assertEq(actualBytes.length, expectedBytes.length);
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testSenatorHands() public {
        string memory actualOutput = testRenderer._renderHands("0 0 2500 2500", "158.1", "309.7", "#0056A5", "#0056A5", "#0056A5", 150, 342, 57, WatchScratchersRenderer.HandType.SENATOR);
        // emit log(actualOutput);
        string memory expectedOutput = '<svg class="dial" viewBox="0 0 2500 2500" x="158.1" y="309.7"> <style>g, line, circle { --color-accent: #0056A5; --color-hand-outer: #0056A5; --color-hand-inner: #0056A5; -webkit-transform-origin: inherit; transform-origin: inherit; display: flex; align-items: center; justify-content: center; margin: 0; } .circle { color: var(--color-hand-outer); } .dial { width: 60vmin; height: 60vmin; fill: currentColor; -webkit-transform-origin: 50px 50px; transform-origin: 50px 50px; -webkit-animation-name: fade-in; animation-name: fade-in; -webkit-animation-duration: 500ms; animation-duration: 500ms; -webkit-animation-fill-mode: both; animation-fill-mode: both; } .dial line { stroke: currentColor; } .hand { transition: -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); } .hour-hand { animation: rotateHourHand 216000s linear infinite; } .hand-outer { stroke-width: 3px; color: var(--color-hand-outer); } .minute-hand { animation: rotateMinuteHand 3600s linear infinite; } .second-hand { color: var(--color-accent); stroke-width: 2px; animation: rotateSecondHand 60s linear infinite; } @keyframes rotateSecondHand { from { -webkit-transform: rotate(150deg); -moz-transform: rotate(150deg); -ms-transform: rotate(150deg); -o-transform: rotate(150deg); transform: rotate(150deg); } to { -webkit-transform: rotate(510deg); -moz-transform: rotate(510deg); -ms-transform: rotate(510deg); -o-transform: rotate(510deg); transform: rotate(510deg); } } @keyframes rotateMinuteHand { from { -webkit-transform: rotate(342deg); -moz-transform: rotate(342deg); -ms-transform: rotate(342deg); -o-transform: rotate(342deg); transform: rotate(342deg); } to { -webkit-transform: rotate(702deg); -moz-transform: rotate(702deg); -ms-transform: rotate(702deg); -o-transform: rotate(702deg); transform: rotate(702deg); } } @keyframes rotateHourHand { from { -webkit-transform: rotate(57deg); -moz-transform: rotate(57deg); -ms-transform: rotate(57deg); -o-transform: rotate(57deg); transform: rotate(57deg); } to { -webkit-transform: rotate(417deg); -moz-transform: rotate(417deg); -ms-transform: rotate(417deg); -o-transform: rotate(417deg); transform: rotate(417deg); } } </style> <g> <g class="hand hour-hand"> <line class="hand-outer" x1="50" x2="50" y1="20" y2="50"/> </g> <g class="hand minute-hand"> <line class="hand-outer" x1="50" x2="50" y1="12" y2="50"/> </g> <circle class="circle" cx="50" cy="50" r="3"/> <g class="hand second-hand"> <line x1="50" x2="50" y1="10" y2="65"/> <circle cx="50" cy="50" r="3"/> <circle cx="50" cy="65" r="2"/> </g> </g> </svg> ';
        bytes memory actualBytes = bytes(actualOutput);
        bytes memory expectedBytes = bytes(expectedOutput);
        assertEq(actualBytes.length, expectedBytes.length);
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    function testTankFHands() public {
        string memory actualOutput = testRenderer._renderHands("0 0 2500 2500", "158.1", "309.7", "#0056A5", "#0056A5", "#0056A5", 150, 342, 57, WatchScratchersRenderer.HandType.TANK_F);
        // emit log(actualOutput);
        string memory expectedOutput = '<svg class="dial" viewBox="0 0 2500 2500" x="158.1" y="309.7"> <style>g, line, circle { --color-accent: #0056A5; --color-hand-outer: #0056A5; --color-hand-inner: #0056A5; -webkit-transform-origin: inherit; transform-origin: inherit; display: flex; align-items: center; justify-content: center; margin: 0; } .circle { color: var(--color-hand-outer); } .dial { width: 60vmin; height: 60vmin; fill: currentColor; -webkit-transform-origin: 50px 50px; transform-origin: 50px 50px; -webkit-animation-name: fade-in; animation-name: fade-in; -webkit-animation-duration: 500ms; animation-duration: 500ms; -webkit-animation-fill-mode: both; animation-fill-mode: both; } .dial line { stroke: currentColor; } .hand { transition: -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); } .hour-hand { animation: rotateHourHand 216000s linear infinite; } .hand-outer { stroke-width: 4px; color: var(--color-hand-outer); } .hand-inner { stroke-width: 2px; color: var(--color-hand-inner); } .minute-hand { animation: rotateMinuteHand 3600s linear infinite; } .second-hand { color: var(--color-accent); stroke-width: 2px; animation: rotateSecondHand 60s linear infinite; } @keyframes rotateSecondHand { from { -webkit-transform: rotate(150deg); -moz-transform: rotate(150deg); -ms-transform: rotate(150deg); -o-transform: rotate(150deg); transform: rotate(150deg); } to { -webkit-transform: rotate(510deg); -moz-transform: rotate(510deg); -ms-transform: rotate(510deg); -o-transform: rotate(510deg); transform: rotate(510deg); } } @keyframes rotateMinuteHand { from { -webkit-transform: rotate(342deg); -moz-transform: rotate(342deg); -ms-transform: rotate(342deg); -o-transform: rotate(342deg); transform: rotate(342deg); } to { -webkit-transform: rotate(702deg); -moz-transform: rotate(702deg); -ms-transform: rotate(702deg); -o-transform: rotate(702deg); transform: rotate(702deg); } } @keyframes rotateHourHand { from { -webkit-transform: rotate(57deg); -moz-transform: rotate(57deg); -ms-transform: rotate(57deg); -o-transform: rotate(57deg); transform: rotate(57deg); } to { -webkit-transform: rotate(417deg); -moz-transform: rotate(417deg); -ms-transform: rotate(417deg); -o-transform: rotate(417deg); transform: rotate(417deg); } } </style> <g> <g class="hand hour-hand"> <line class="hand-outer" x1="50" x2="50" y1="30" y2="50"/> </g> <g class="hand minute-hand"> <line class="hand-outer" x1="50" x2="50" y1="20" y2="50"/> </g> <circle class="circle" cx="50" cy="50" r="3"/> </g> </svg> ';
        bytes memory actualBytes = bytes(actualOutput);
        bytes memory expectedBytes = bytes(expectedOutput);
        assertEq(actualBytes.length, expectedBytes.length);
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    // render hands test
    function testTankHands() public {
        string memory actualOutput = testRenderer._renderHands("0 0 2500 2500", "158.1", "309.7", "#1C55B4", "#1C55B4", "#1C55B4", 150, 342, 57, WatchScratchersRenderer.HandType.TANK);
        // emit log(actualOutput);
        string memory expectedOutput = '<svg class="dial" viewBox="0 0 2500 2500" x="158.1" y="309.7"> <style>g, line, circle { --color-accent: #1C55B4; --color-hand-outer: #1C55B4; --color-hand-inner: #1C55B4; -webkit-transform-origin: inherit; transform-origin: inherit; display: flex; align-items: center; justify-content: center; margin: 0; } .circle { color: var(--color-hand-outer); } .dial { width: 60vmin; height: 60vmin; fill: currentColor; -webkit-transform-origin: 50px 50px; transform-origin: 50px 50px; -webkit-animation-name: fade-in; animation-name: fade-in; -webkit-animation-duration: 500ms; animation-duration: 500ms; -webkit-animation-fill-mode: both; animation-fill-mode: both; } .dial line { stroke: currentColor; } .hand { transition: -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); } .hour-hand { animation: rotateHourHand 216000s linear infinite; } .hand-outer { stroke-width: 4px; color: var(--color-hand-outer); } .hand-inner { stroke-width: 2px; color: var(--color-hand-inner); } .minute-hand { animation: rotateMinuteHand 3600s linear infinite; } .second-hand { color: var(--color-accent); stroke-width: 2px; animation: rotateSecondHand 60s linear infinite; } @keyframes rotateSecondHand { from { -webkit-transform: rotate(150deg); -moz-transform: rotate(150deg); -ms-transform: rotate(150deg); -o-transform: rotate(150deg); transform: rotate(150deg); } to { -webkit-transform: rotate(510deg); -moz-transform: rotate(510deg); -ms-transform: rotate(510deg); -o-transform: rotate(510deg); transform: rotate(510deg); } } @keyframes rotateMinuteHand { from { -webkit-transform: rotate(342deg); -moz-transform: rotate(342deg); -ms-transform: rotate(342deg); -o-transform: rotate(342deg); transform: rotate(342deg); } to { -webkit-transform: rotate(702deg); -moz-transform: rotate(702deg); -ms-transform: rotate(702deg); -o-transform: rotate(702deg); transform: rotate(702deg); } } @keyframes rotateHourHand { from { -webkit-transform: rotate(57deg); -moz-transform: rotate(57deg); -ms-transform: rotate(57deg); -o-transform: rotate(57deg); transform: rotate(57deg); } to { -webkit-transform: rotate(417deg); -moz-transform: rotate(417deg); -ms-transform: rotate(417deg); -o-transform: rotate(417deg); transform: rotate(417deg); } } </style> <g> <g class="hand hour-hand"> <line class="hand-outer" x1="50" x2="50" y1="20" y2="50"/> </g> <g class="hand minute-hand"> <line class="hand-outer" x1="50" x2="50" y1="10" y2="50"/> </g> <circle class="circle" cx="50" cy="50" r="3"/> <g class="hand second-hand"> <line x1="50" x2="50" y1="10" y2="60"/> <circle cx="50" cy="50" r="1.5"/> </g> </g> </svg>';
        bytes memory actualBytes = bytes(actualOutput);
        bytes memory expectedBytes = bytes(expectedOutput);
        assertEq(actualBytes.length, expectedBytes.length);
        assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    }

    // function testDJ() public {
    //     string memory actualOutput = testRenderer._renderDJ();
    //     // emit log(actualOutput);
    //     string memory expectedOutput = '<svg width="600" height="600" viewBox="0 0 600 600" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"> <rect width="600" height="600" fill="#FBF6E9" /> <svg x="155.15" y="100" width="499" height="683" viewBox="0 0 852 1166" xmlns="http://www.w3.org/2000/svg"> <rect x="77" y="125" width="37" height="45" fill="#B2B2B2"/> <rect x="343" y="125" width="37" height="45" fill="#B2B2B2"/> <rect x="289" y="19" width="41" height="119" fill="#B2B2B2"/> <rect x="132" y="20" width="44" height="119" fill="#B2B2B2"/> <rect x="195" y="20" width="79" height="119" fill="#EBEBEB"/> <rect transform="matrix(1 0 0 -1 77 563)" width="37" height="45" fill="#B2B2B2"/> <rect transform="matrix(1 0 0 -1 343 563)" width="37" height="45" fill="#B2B2B2"/> <rect transform="matrix(1 0 0 -1 289 669)" width="41" height="119" fill="#B2B2B2"/> <rect transform="matrix(1 0 0 -1 132 668)" width="44" height="119" fill="#B2B2B2"/> <rect transform="matrix(1 0 0 -1 195 668)" width="79" height="119" fill="#EBEBEB"/> <rect x="445" y="314" width="42" height="75" fill="#B2B2B2"/> <circle cx="229" cy="345" r="215" fill="#B2B2B2" stroke="#000" stroke-width="28"/> <circle cx="228.5" cy="344.5" r="174.5" fill="#F5F5F5" stroke="#000" stroke-width="28"/> <line x1="443" x2="499" y1="311" y2="311" stroke="#000" stroke-width="28"/> <line x1="485" x2="485" y1="317" y2="406" stroke="#000" stroke-width="28"/> <line x1="443" x2="482.2" y1="392" y2="392" stroke="#000" stroke-width="28"/> <line transform="matrix(-.07171 -.99743 -.99743 .07171 326 156)" x2="153.4" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line x1="54.553" x2="85.553" y1="219.1" y2="112.1" stroke="#000" stroke-width="28"/> <line transform="matrix(-.27828 -.9605 -.9605 .27828 390 223)" x2="111.4" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line x1="75.132" x2="118.13" y1="121.3" y2="112.3" stroke="#000" stroke-width="28"/> <line transform="matrix(-.97879 -.20486 -.20486 .97879 380 135)" x2="43.932" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line x1="118.04" x2="129.04" y1="155" y2="1.996" stroke="#000" stroke-width="28"/> <line x1="115" x2="343" y1="15" y2="15" stroke="#000" stroke-width="28"/> <line x1="185" x2="185" y1="25" y2="129.02" stroke="#000" stroke-width="28"/> <line x1="278" x2="278" y1="27" y2="131.02" stroke="#000" stroke-width="28"/> <line x1="132" x2="171.01" y1="98" y2="98" stroke="#000" stroke-width="28"/> <line x1="287" x2="326.01" y1="98" y2="98" stroke="#000" stroke-width="28"/> <line x1="190" x2="269" y1="75" y2="75" stroke="#000" stroke-width="28"/> <line x1="339.96" x2="328.96" y1="534" y2="687" stroke="#000" stroke-width="28"/> <line transform="matrix(.27828 .9605 .9605 -.27828 68 466)" x2="111.4" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line x1="403.45" x2="372.45" y1="469.9" y2="576.9" stroke="#000" stroke-width="28"/> <line transform="matrix(.97879 .20486 .20486 -.97879 78 554)" x2="43.932" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line x1="382.87" x2="339.87" y1="567.7" y2="576.7" stroke="#000" stroke-width="28"/> <line transform="matrix(.07171 .99743 .99743 -.07171 132 533)" x2="153.4" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line transform="matrix(1 0 0 -1 115 660)" x2="228" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line transform="matrix(0 -1 -1 0 171 664)" x2="104.02" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line transform="matrix(0 -1 -1 0 264 662)" x2="104.02" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line transform="matrix(1 0 0 -1 132 577)" x2="39.013" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line transform="matrix(1 0 0 -1 287 577)" x2="39.013" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <line transform="matrix(1 0 0 -1 190 600)" x2="79" y1="-14" y2="-14" stroke="#000" stroke-width="28"/> <rect transform="rotate(-32.703 147.18 219.72)" x="147.18" y="219.72" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect transform="matrix(.84148 .54028 .54028 -.84148 146.38 469.44)" x="1.3818" y="-.3012" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect transform="rotate(147.3 307.12 470.44)" x="307.12" y="470.44" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect x="224" y="459" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect transform="matrix(-.84148 -.54028 -.54028 .84148 306.12 218.8)" x="-1.3818" y=".3012" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect transform="rotate(-61.388 97.357 276.17)" x="97.357" y="276.17" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect transform="matrix(.47888 .87788 .87788 -.47888 96.357 414.46)" x="1.3568" y=".39901" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect transform="rotate(118.61 361.52 415.46)" x="361.52" y="415.46" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect transform="rotate(-90 79 350.03)" x="79" y="350.03" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect transform="matrix(-.47888 -.87788 -.87788 .47888 360.52 275.17)" x="-1.3568" y="-.39901" width="10.034" height="35.72" fill="#EDEDED" stroke="#5C5F60" stroke-width="2"/> <rect x="308" y="314" width="79" height="62" rx="31" fill="#F9F8F8" stroke="#5C5F60" stroke-width="2"/> <path d="m210.21 205.19 18.288-11.991 18.288 11.991-6.941 19.28h-22.694l-6.941-19.28z" fill="#E3E3E3" stroke="#78797A" stroke-width="2"/> <path d="m243 227c0 2.628-1.499 5.104-4.119 6.963-2.617 1.857-6.284 3.037-10.381 3.037s-7.764-1.18-10.381-3.037c-2.62-1.859-4.119-4.335-4.119-6.963s1.499-5.104 4.119-6.963c2.617-1.857 6.284-3.037 10.381-3.037s7.764 1.18 10.381 3.037c2.62 1.859 4.119 4.335 4.119 6.963z" fill="#E3E3E3" stroke="#78797A" stroke-width="2"/> <path d="m235 229c0 2.565-2.69 5-6.5 5s-6.5-2.435-6.5-5 2.69-5 6.5-5 6.5 2.435 6.5 5z" fill="#fff" stroke="#66686A" stroke-width="2"/> </svg> <svg class="dial" viewBox="0 0 280 280" x="182" y="195"> <style>g, line, circle { --color-accent: #B2B2B2; --color-hand-outer: #B2B2B2; --color-hand-inner: #E8E8E8; -webkit-transform-origin: inherit; transform-origin: inherit; display: flex; align-items: center; justify-content: center; margin: 0; } .circle { color: var(--color-hand-outer); } .dial { width: 60vmin; height: 60vmin; fill: currentColor; -webkit-transform-origin: 50px 50px; transform-origin: 50px 50px; -webkit-animation-name: fade-in; animation-name: fade-in; -webkit-animation-duration: 500ms; animation-duration: 500ms; -webkit-animation-fill-mode: both; animation-fill-mode: both; } .dial line { stroke: currentColor; } .hand { transition: -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275); } .hour-hand { animation: rotateHourHand 216000s linear infinite; } .hand-outer { stroke-width: 4px; color: var(--color-hand-outer); } .hand-inner { stroke-width: 2px; color: var(--color-hand-inner); } .minute-hand { animation: rotateMinuteHand 3600s linear infinite; } .second-hand { color: var(--color-accent); stroke-width: 2px; animation: rotateSecondHand 60s linear infinite; } @keyframes rotateSecondHand { from { -webkit-transform: rotate(150deg); -moz-transform: rotate(150deg); -ms-transform: rotate(150deg); -o-transform: rotate(150deg); transform: rotate(150deg); } to { -webkit-transform: rotate(510deg); -moz-transform: rotate(510deg); -ms-transform: rotate(510deg); -o-transform: rotate(510deg); transform: rotate(510deg); } } @keyframes rotateMinuteHand { from { -webkit-transform: rotate(342deg); -moz-transform: rotate(342deg); -ms-transform: rotate(342deg); -o-transform: rotate(342deg); transform: rotate(342deg); } to { -webkit-transform: rotate(702deg); -moz-transform: rotate(702deg); -ms-transform: rotate(702deg); -o-transform: rotate(702deg); transform: rotate(702deg); } } @keyframes rotateHourHand { from { -webkit-transform: rotate(60deg); -moz-transform: rotate(60deg); -ms-transform: rotate(60deg); -o-transform: rotate(60deg); transform: rotate(60deg); } to { -webkit-transform: rotate(420deg); -moz-transform: rotate(420deg); -ms-transform: rotate(420deg); -o-transform: rotate(420deg); transform: rotate(420deg); } } </style> <g> <g class="hand hour-hand"> <line class="hand-outer" x1="50" x2="50" y1="25" y2="60"/> <line class="hand-inner" x1="50" x2="50" y1="28" y2="40"/> </g> <g class="hand minute-hand"> <line class="hand-outer" x1="50" x2="50" y1="15" y2="60"/> <line class="hand-inner" x1="50" x2="50" y1="18" y2="40"/> </g> <circle class="circle" cx="50" cy="50" r="3"/> <g class="hand second-hand"> <line x1="50" x2="50" y1="10" y2="65"/> <circle cx="50" cy="50" r="3"/> </g> </g> </svg> </svg>';
    //     bytes memory actualBytes = bytes(actualOutput);
    //     bytes memory expectedBytes = bytes(expectedOutput);
    //     assertEq(actualBytes.length, expectedBytes.length);
    //     assertEq(keccak256(abi.encodePacked(actualOutput)), keccak256(abi.encodePacked(expectedOutput)));
    // }

    // function testRenderPP() public {
    //     testRenderer.setCaseRenderer(IWatchScratchersWatchCaseRenderer.CaseType.PP, 0x007385d376D01873d6a08B17C4569E330c66B579);
    //     string memory actualOutput = IWatchScratchersWatchCaseRenderer(0x007385d376D01873d6a08B17C4569E330c66B579).renderSvg(IWatchScratchersWatchCaseRenderer.CaseType.PP);//testRenderer.renderWatch(WatchScratchersRenderer.WatchType.PP_TIFFANY);
    //     emit log(actualOutput);
    //     assertEq(actualOutput, '');
    // }
}
